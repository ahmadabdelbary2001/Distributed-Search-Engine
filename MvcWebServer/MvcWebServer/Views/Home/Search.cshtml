@{
    ViewData["Title"] = "Document Search";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
        }
        .container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            font-size: 24px;
            color: #343a40;
        }
        .search-box {
            display: flex;
            margin-bottom: 20px;
        }
        .search-box input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 4px 0 0 4px;
            font-size: 16px;
        }
        .search-box button {
            padding: 10px 20px;
            border: 1px solid #ced4da;
            background-color: #007bff;
            color: white;
            border-radius: 0 4px 4px 0;
            cursor: pointer;
        }
        .search-box button:hover {
            background-color: #0056b3;
        }
        ul {
            list-style: none;
            padding: 0;
        }
        li {
            background: #e9ecef;
            margin-bottom: 10px;
            padding: 15px;
            border-radius: 4px;
        }
        li:hover {
            background: #ced4da;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Document Search</h1>
        <div class="search-box">
            <input type="text" id="query" placeholder="Enter keyword..." />
            <button onclick="performSearch()">Search</button>
        </div>
        <ul id="results"></ul>
    </div>

    <script>
        async function performSearch() {
            const query = document.getElementById("query").value.trim();
            if (!query) {
                alert("Please enter a keyword to search.");
                return;
            }

            try {
                const coordinatorAddress = await getCoordinatorAddress();
                const response = await fetch(`${coordinatorAddress}/api/coordinator/search`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ query: query })
                });

                const results = await response.json();
                displayResults(results);
            } catch (error) {
                console.error("Error fetching search results:", error);
                alert("An error occurred while fetching search results. Please try again.");
            }
        }

        async function getCoordinatorAddress() {
            try {
                const response = await fetch("/api/web/coordinator");
                if (!response.ok) {
                    throw new Error("Failed to fetch coordinator address.");
                }
                return await response.text();
            } catch (error) {
                console.error("Error fetching coordinator address:", error);
                alert("Coordinator address is not available.");
                throw error;
            }
        }

        function displayResults(results) {
            const resultsList = document.getElementById("results");
            resultsList.innerHTML = "";
            results.forEach(result => {
                const li = document.createElement("li");
                li.textContent = `Document: ${result.id} - Score: ${result.relevanceScore}`;
                resultsList.appendChild(li);
            });
        }
    </script>
</body>
</html>
